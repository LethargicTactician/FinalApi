version: '3'
services: 
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      joedaddy:

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      joedaddy:

  bookapi1:  
    container_name: bookapi1
    build: ./bookapi
    ports:
      - "3054:5000"
    networks:
      joedaddy:
    depends_on:
      - database
    links:
      - database

  bookapi2:
    container_name: bookapi2
    build: ./bookapi
    ports:
      - "3055:5000"
    networks:
      joedaddy:
    depends_on:
      - database
    links:
      - database

  # EMAIL SERVICE
  emailthnig: 
    build: ./emailmicroservice
    ports:
      - "6969:3069"
    networks:
      joedaddy:

  nginx:
    build: ./nginx
    ports:
      - "8220:80"
    depends_on:
      - bookapi1
      - bookapi2
    networks:
      joedaddy:

  database:
    image: mysql:latest
    container_name: database
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: admin
      MYSQL_ROOT_PASSWORD: password
      MYSQL_PASSWORD: password
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
    ports:
      - '3406:3306'
    volumes:
      - ./database-service/script:/docker-entrypoint-initdb.d
    networks:
      joedaddy:

#   prometheus:
#     image: prom/prometheus
#     ports: 
#       - 9069:9090
#     depends_on: 
#       - bookapi1
#       - bookapi2
#       - broker
#     volumes:
#       - ./prometheus:/etc/prometheus
#       - prometheus-data:/prometheus
# volumes:
#   prometheus-data: 

networks:
  joedaddy:
    name: joemommy